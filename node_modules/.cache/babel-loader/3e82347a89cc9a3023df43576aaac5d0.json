{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Mario.Baez\\\\Documents\\\\code\\\\personal\\\\battle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Mario.Baez\\\\Documents\\\\code\\\\personal\\\\battle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Mario.Baez\\\\Documents\\\\code\\\\personal\\\\battle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Mario.Baez\\\\Documents\\\\code\\\\personal\\\\battle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Mario.Baez\\\\Documents\\\\code\\\\personal\\\\battle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Mario.Baez\\\\Documents\\\\code\\\\personal\\\\battle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mario.Baez\\\\Documents\\\\code\\\\personal\\\\battle\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport CardSearch from './pages/cardSearch';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      cardSearchState: {\n        inputValueCardName: '',\n        autocompleteUrl: 'https://api.scryfall.com/cards/autocomplete?q=',\n        fuzzyUrl: 'https://api.scryfall.com/cards/named?fuzzy=',\n        cardList: [],\n        selectedCard: {},\n        selectedMana: [],\n        badSearch: false,\n        modalState: false\n      } // Card Search Functions \n\n    };\n    _this.handleSearchInputChange = _this.handleSearchInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleSearchModal = _this.toggleSearchModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSearch = _this.handleSearch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeModal = _this.removeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Card Search Functions \n\n\n  _createClass(App, [{\n    key: \"handleSearchInputChange\",\n    value: function handleSearchInputChange(event) {\n      var cardSearchState = this.state.cardSearchState;\n      cardSearchState.inputValueCardName = event.target.value;\n      this.setState({\n        cardSearchState: cardSearchState\n      });\n    }\n  }, {\n    key: \"handleSearch\",\n    value: function handleSearch(event) {\n      var cardSearchState = this.state.cardSearchState,\n          searchAutoUrl = cardSearchState.autocompleteUrl,\n          searchFuzzyUrl = cardSearchState.fuzzyUrl,\n          self = this; // Reset card list\n\n      cardSearchState.cardList = [];\n\n      if (cardSearchState.inputValueCardName.length > 0) {\n        searchAutoUrl = searchAutoUrl + cardSearchState.inputValueCardName.split(' ').join('+'); // First axios search to find all the cards with that name\n\n        axios.get(searchAutoUrl).then(function (response) {\n          var autocompleteName = response.data.data;\n\n          if (response.data.data.length > 0) {\n            // If there are cards in the list\n            // For each card returned, it will search for that card          \n            var urlsToSearch = autocompleteName.map(function (name) {\n              return searchFuzzyUrl + name.split(' ').join('+');\n            });\n            urlsToSearch.forEach(function (url) {\n              return axios.get(url).then(function (response) {\n                cardSearchState.cardList.push(response.data);\n                cardSearchState.badSearch = false;\n                self.setState({\n                  cardSearchState: cardSearchState\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n            });\n          } else {\n            cardSearchState.cardList = [];\n            cardSearchState.badSearch = true;\n            self.setState({\n              cardSearchState: cardSearchState\n            });\n            console.log(\"No Similar Cards\");\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"toggleSearchModal\",\n    value: function toggleSearchModal(card) {\n      var cardSearchState = this.state.cardSearchState;\n      cardSearchState.selectedCard = card;\n      cardSearchState.modalState = !cardSearchState.modalState;\n      this.setState({\n        cardSearchState: cardSearchState\n      });\n    }\n  }, {\n    key: \"removeModal\",\n    value: function removeModal() {\n      var cardSearchState = this.state.cardSearchState;\n      cardSearchState.selectedCard = {};\n      cardSearchState.modalState = !cardSearchState.modalState;\n      this.setState({\n        cardSearchState: cardSearchState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(CardSearch, {\n        handleSearchInputChange: this.handleSearchInputChange,\n        handleSearch: this.handleSearch,\n        cardSearchState: this.state.cardSearchState,\n        toggleSearchModal: this.toggleSearchModal,\n        removeModal: this.removeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Mario.Baez\\Documents\\code\\personal\\battle\\src\\App.js"],"names":["React","Component","CardSearch","axios","App","props","state","cardSearchState","inputValueCardName","autocompleteUrl","fuzzyUrl","cardList","selectedCard","selectedMana","badSearch","modalState","handleSearchInputChange","bind","toggleSearchModal","handleSearch","removeModal","event","target","value","setState","searchAutoUrl","searchFuzzyUrl","self","length","split","join","get","then","response","autocompleteName","data","urlsToSearch","map","name","forEach","url","push","catch","error","console","log","preventDefault","card"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CardSearch from './pages/cardSearch'\nimport axios from 'axios';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardSearchState: {\n        inputValueCardName: '',\n        autocompleteUrl: 'https://api.scryfall.com/cards/autocomplete?q=',\n        fuzzyUrl: 'https://api.scryfall.com/cards/named?fuzzy=',\n        cardList: [],\n        selectedCard: {},\n        selectedMana: [],\n        badSearch: false,\n        modalState: false\n      }\n    }\n\n\n    // Card Search Functions \n    this.handleSearchInputChange = this.handleSearchInputChange.bind(this);\n    this.toggleSearchModal = this.toggleSearchModal.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.removeModal = this.removeModal.bind(this)\n  }\n\n\n  // Card Search Functions \n  handleSearchInputChange(event) {\n    let cardSearchState = this.state.cardSearchState;\n    cardSearchState.inputValueCardName = event.target.value;\n    this.setState({ cardSearchState: cardSearchState });\n  }\n  handleSearch(event) {\n    let cardSearchState = this.state.cardSearchState,\n      searchAutoUrl = cardSearchState.autocompleteUrl,\n      searchFuzzyUrl = cardSearchState.fuzzyUrl,\n      self = this;\n    // Reset card list\n    cardSearchState.cardList = [];\n\n    if (cardSearchState.inputValueCardName.length > 0) {\n      searchAutoUrl = searchAutoUrl + cardSearchState.inputValueCardName.split(' ').join('+');\n      // First axios search to find all the cards with that name\n      axios.get(searchAutoUrl)\n        .then(function (response) {\n          let autocompleteName = response.data.data;\n          if (response.data.data.length > 0) {\n\n            // If there are cards in the list\n            // For each card returned, it will search for that card          \n            let urlsToSearch = autocompleteName.map(name => searchFuzzyUrl + name.split(' ').join('+'));\n            urlsToSearch.forEach(url =>\n              axios.get(url)\n                .then(function (response) {\n                  cardSearchState.cardList.push(response.data)\n                  cardSearchState.badSearch = false;\n                  self.setState({ cardSearchState: cardSearchState })\n                }).catch(function (error) {\n                  console.log(error);\n                }))\n          } else {\n            cardSearchState.cardList = [];\n            cardSearchState.badSearch = true;\n            self.setState({ cardSearchState: cardSearchState })\n            console.log(\"No Similar Cards\")\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    event.preventDefault();\n  }\n  toggleSearchModal(card) {\n    let cardSearchState = this.state.cardSearchState;\n    cardSearchState.selectedCard = card\n    cardSearchState.modalState = !cardSearchState.modalState;\n    this.setState({ cardSearchState: cardSearchState });\n  }\n  removeModal() {\n    let cardSearchState = this.state.cardSearchState;\n    cardSearchState.selectedCard = {};\n    cardSearchState.modalState = !cardSearchState.modalState;\n    this.setState({ cardSearchState: cardSearchState });\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n        <CardSearch handleSearchInputChange={this.handleSearchInputChange}\n          handleSearch={this.handleSearch}\n          cardSearchState={this.state.cardSearchState}\n          toggleSearchModal={this.toggleSearchModal}\n          removeModal={this.removeModal} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}