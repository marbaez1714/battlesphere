{"ast":null,"code":"'use strict';\n\nvar toastr = {};\nvar Toast;\n\n(function (Toast) {\n  // Modifiable defaults.\n  Toast.defaults = {\n    width: '',\n    displayDuration: 2000,\n    fadeOutDuration: 800\n  };\n  /* Popup functions */\n\n  /**\n   * Popup informational message.\n   * @param message A message string.\n   * @param title An optional title string.\n   * @param options An optional map of {@link Options}.\n   */\n\n  function info(message, title, options) {\n    _toast('info', message, title, options);\n  }\n\n  Toast.info = info;\n  /**\n   * Popup warning message.\n   * @param message A message string.\n   * @param title An optional title string.\n   * @param options An optional map of {@link Options}.\n   */\n\n  function warning(message, title, options) {\n    _toast('warning', message, title, options);\n  }\n\n  Toast.warning = warning;\n  /**\n   * Popup error message.\n   * @param message A message string.\n   * @param title An optional title string.\n   * @param options An optional map of {@link Options}.\n   */\n\n  function error(message, title, options) {\n    _toast('error', message, title, options);\n  }\n\n  Toast.error = error;\n  /**\n   * Popup success message.\n   * @param message A message string.\n   * @param title An optional title string.\n   * @param options An optional map of {@link Options}.\n   */\n\n  function success(message, title, options) {\n    _toast('success', message, title, options);\n  }\n\n  Toast.success = success;\n  /* Private variables and functions */\n\n  var _container; // Toast container DOM element.\n\n\n  function _toast(type, // 'info', 'success', 'error', 'warning'\n  message, title, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options = $.extend({}, Toast.defaults, options);\n\n    if (!_container) {\n      _container = $('#toast-container');\n\n      if (_container.length === 0) {\n        // Create container element if it is not in the static HTML.\n        _container = $('<div>').attr('id', 'toast-container').appendTo($('body'));\n      }\n    }\n\n    if (options.width) {\n      _container.css({\n        width: options.width\n      });\n    }\n\n    var toastElement = $('<div>').addClass('toast').addClass('toast-' + type);\n\n    if (title) {\n      var titleElement = $('<div>').addClass('toast-title').append(title);\n      toastElement.append(titleElement);\n    }\n\n    if (message) {\n      var messageElement = $('<div>').addClass('toast-message').append(message);\n      toastElement.append(messageElement);\n    }\n\n    if (options.displayDuration > 0) {\n      setTimeout(function () {\n        toastElement.fadeOut(options.fadeOutDuration, function () {\n          toastElement.remove();\n        });\n      }, options.displayDuration);\n    }\n\n    toastElement.on('click', function () {\n      toastElement.remove();\n    });\n\n    _container.prepend(toastElement);\n  }\n})(Toast || (Toast = {}));\n\ntoastr.success = function (message, title, settings) {\n  message = typeof message === 'undefined' ? '' : message;\n  title = typeof title === 'undefined' ? '' : title;\n  settings = typeof settings === 'undefined' ? '' : settings;\n  Toast.success(message, title, settings);\n};\n\ntoastr.info = function (message, title, settings) {\n  message = typeof message === 'undefined' ? '' : message;\n  title = typeof title === 'undefined' ? '' : title;\n  settings = typeof settings === 'undefined' ? '' : settings;\n  Toast.info(message, title, settings);\n};\n\ntoastr.warning = function (message, title, settings) {\n  message = typeof message === 'undefined' ? '' : message;\n  title = typeof title === 'undefined' ? '' : title;\n  settings = typeof settings === 'undefined' ? '' : settings;\n  Toast.warning(message, title, settings);\n};\n\ntoastr.error = function (message, title, settings) {\n  message = typeof message === 'undefined' ? '' : message;\n  title = typeof title === 'undefined' ? '' : title;\n  settings = typeof settings === 'undefined' ? '' : settings;\n  Toast.error(message, title, settings);\n};\n\nmodule.exports = toastr;","map":null,"metadata":{},"sourceType":"script"}