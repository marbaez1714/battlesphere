{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mario.Baez\\\\Documents\\\\code\\\\personal\\\\battle\\\\src\\\\pages\\\\cardSearch.js\";\nimport React from 'react';\nimport { Container, Col, Input, Form, InputGroup, InputGroupAddon, Button, Row, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\nimport '../App.css';\n\nfunction SearchBox(props) {\n  return React.createElement(Row, {\n    className: \"searchBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: \"inputBox\",\n    onChange: props.handleSearchInputChange,\n    onSubmit: props.handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Search\"))))));\n}\n\nfunction LegalBox(props) {\n  if (props.legal === \"legal\") {\n    return React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, props.game));\n  } else {\n    return React.createElement(Col, {\n      xs: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, props.game));\n  }\n}\n\nfunction CardDataModal(props) {\n  return React.createElement(Modal, {\n    isOpen: props.cardSearchState.modalState,\n    toggle: function toggle(event) {\n      return props.removeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: function toggle(event) {\n      return props.removeModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.cardSearchState.selectedCard.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.cardSearchState.selectedCard.type_line), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.cardSearchState.selectedCard.mana_cost)), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.cardSearchState.selectedCard.oracle_text), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(LegalBox, {\n    game: \"stuff\",\n    legal: \"not_legal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(LegalBox, {\n    game: \"dsdfsad\",\n    legal: \"legal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n}\n\nfunction Card(props) {\n  return React.createElement(Col, {\n    xs: \"6\",\n    md: \"3\",\n    className: \"searchResultsCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: function onClick(event) {\n      return props.toggleSearchModal(props.card);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.card.image_uris.border_crop,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })));\n}\n\nexport default function CardSearch(props) {\n  return React.createElement(Container, {\n    className: \"CardSearchWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(SearchBox, {\n    handleSearchInputChange: props.handleSearchInputChange,\n    handleSearch: props.handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Row, {\n    style: {\n      paddingLeft: \"1vh\",\n      paddingRight: \"1vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.cardSearchState.cardList.map(function (card, idx) {\n    return React.createElement(Card, {\n      key: idx,\n      card: card,\n      toggleSearchModal: props.toggleSearchModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  })), React.createElement(CardDataModal, {\n    cardSearchState: props.cardSearchState,\n    removeModal: props.removeModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:\\Users\\Mario.Baez\\Documents\\code\\personal\\battle\\src\\pages\\cardSearch.js"],"names":["React","Container","Col","Input","Form","InputGroup","InputGroupAddon","Button","Row","Modal","ModalBody","ModalHeader","ModalFooter","SearchBox","props","handleSearchInputChange","handleSearch","LegalBox","legal","game","CardDataModal","cardSearchState","modalState","event","removeModal","selectedCard","name","type_line","mana_cost","oracle_text","Card","toggleSearchModal","card","image_uris","border_crop","width","CardSearch","paddingLeft","paddingRight","cardList","map","idx"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container, Col, Input, Form, InputGroup, InputGroupAddon, Button, Row, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport '../App.css';\r\n\r\nfunction SearchBox(props) {\r\n    return (\r\n        <Row className=\"searchBox\">\r\n            <Col xs=\"12\">\r\n                <Form className=\"inputBox\" onChange={props.handleSearchInputChange} onSubmit={props.handleSearch}>\r\n                    <InputGroup  >\r\n                        <Input />\r\n                        <InputGroupAddon addonType=\"append\"><Button color=\"secondary\">Search</Button></InputGroupAddon>\r\n                    </InputGroup>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nfunction LegalBox(props) {\r\n    if (props.legal === \"legal\") {\r\n        return (\r\n            <Col xs=\"6\">\r\n                <Button color=\"success\">{props.game}</Button>\r\n            </Col>\r\n        )\r\n    } else {\r\n        return (\r\n            <Col xs=\"6\">\r\n                <Button color=\"secondary\">{props.game}</Button>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CardDataModal(props) {\r\n    return (\r\n        <Modal isOpen={props.cardSearchState.modalState} toggle={event => props.removeModal()} >\r\n            <ModalHeader toggle={event => props.removeModal()}>\r\n                <p>{props.cardSearchState.selectedCard.name}</p>\r\n                <p>{props.cardSearchState.selectedCard.type_line}</p>\r\n                <p>{props.cardSearchState.selectedCard.mana_cost}</p>\r\n            </ModalHeader>\r\n            <ModalBody>{props.cardSearchState.selectedCard.oracle_text}</ModalBody>\r\n            <ModalFooter>\r\n                <LegalBox game=\"stuff\" legal=\"not_legal\" />\r\n                <LegalBox game=\"dsdfsad\" legal=\"legal\" />\r\n\r\n            </ModalFooter>\r\n\r\n\r\n        </Modal >\r\n    )\r\n}\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <Col xs=\"6\" md=\"3\" className=\"searchResultsCard\">\r\n            <Button onClick={event => props.toggleSearchModal(props.card)}>\r\n                <img src={props.card.image_uris.border_crop} style={{ width: \"100%\" }} />\r\n            </Button>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default function CardSearch(props) {\r\n    return (\r\n        <Container className=\"CardSearchWrapper\">\r\n            <SearchBox handleSearchInputChange={props.handleSearchInputChange} handleSearch={props.handleSearch} />\r\n            <Row style={{ paddingLeft: \"1vh\", paddingRight: \"1vh\" }}>\r\n                {props.cardSearchState.cardList.map((card, idx) => <Card key={idx} card={card} toggleSearchModal={props.toggleSearchModal} />)}\r\n            </Row>\r\n            <CardDataModal cardSearchState={props.cardSearchState} removeModal={props.removeModal} />\r\n        </Container>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}