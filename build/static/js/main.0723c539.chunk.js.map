{"version":3,"sources":["images/loading.svg","images/mana symbols/x.svg","images/mana symbols/y.svg","images/mana symbols/z.svg","images/mana symbols/wu.svg","images/mana symbols/wb.svg","images/mana symbols/br.svg","images/mana symbols/bg.svg","images/mana symbols/ub.svg","images/mana symbols/ur.svg","images/mana symbols/rg.svg","images/mana symbols/rw.svg","images/mana symbols/gw.svg","images/mana symbols/gu.svg","images/mana symbols/2w.svg","images/mana symbols/2u.svg","images/mana symbols/2b.svg","images/mana symbols/2r.svg","images/mana symbols/2g.svg","images/mana symbols/cp.svg","images/mana symbols/wp.svg","images/mana symbols/up.svg","images/mana symbols/bp.svg","images/mana symbols/rp.svg","images/mana symbols/gp.svg","images/mana symbols/w.svg","images/mana symbols/u.svg","images/mana symbols/b.svg","images/mana symbols/r.svg","images/mana symbols/g.svg","images/mana symbols/s.svg","pages/home.js","pages/cardSearch.js","pages/planechase.js","pages/battleCounter.js","pages/setSearch.js","utilities/symbolSwitch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomeCard","props","react_default","a","createElement","reactstrap_es","xs","md","className","style","paddingLeft","paddingRight","marginTop","marginBottom","src","image","onClick","event","changePage","idx","alt","name","Home","SearchBox","onChange","handleSearchInputChange","onSubmit","handleSearch","borderRadius","addonType","color","LegalBox","legal","game","CardDataModal","cardData","cardSearchState","selectedCard","cardLegal","legalities","isOpen","modalState","toggle","removeModal","type_line","selectedMana","oracle_text","key","standard","future","frontier","modern","legacy","pauper","vintage","penny","commander","duel","brawl","Card","toggleSearchModal","card","image_uris","border_crop","width","CardSearch","handleNewSearch","searchSuccessNotify","cardList","map","PlaneCard","addToPlanechaseDeck","DeckCard","removeCardFromGameDeck","ButtonGroup","addAll","removeAll","startGame","Game","planechaseState","gameDeck","length","nextCard","normal","endGame","Planechase","display","gameGoing","allPlaneCards","PlayerCard","placeholder","playerNumber","padding","player","plusOne","cursor","minusOne","addCounter","BattleCounter","addPlayer","removeAllPlayers","battleCounterState","players","SetRow","selectSet","set","set_type","icon_svg_uri","card_count","released_at","SetTable","size","offset","hover","responsive","setSearchState","allSets","removeSetModal","setSearch_LegalBox","toggleSetSearchModal","SetCard","loading","showSet","returnToSets","setData","setSearch_Card","console","log","SetSearch","Loading","setSearch_CardDataModal","converText","manaText","split","element","filter","mana","xMana","yMana","zMana","whiteOrBlue","whiteOrBlack","blackOrRed","blackOrGreen","blueOrBlack","blueOrRed","redOrGreen","redOrWhite","greenOrWhite","greenOrBlue","twoOrWhite","twoOrBlue","twoOrBlack","twoOrRed","twoOrGreen","colorOrLife","whiteOrLife","blueOrLife","blackOrLife","redOrLife","greenOrLife","whiteMana","blueMana","blackMana","redMana","greenMana","snowMana","findSymbol","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pageView","planeSearchUrl","currentCardIdx","inputValueCardName","autocompleteUrl","fuzzyUrl","searchUrl","badSearch","setSearchUrl","selectedSet","bind","assertThisInitialized","findAllPlaneCards","findAllSets","setSearch","index","setState","target","value","self","join","axios","get","then","response","searchData","data","toast","success","forEach","push","error","catch","preventDefault","mana_cost","info","concat","splice","deck","i","j","Math","floor","random","_ref","shuffle","shift","_ref2","playerIdx","search_uri","uri","has_more","next_page","_this2","pages","lib","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0723c539.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.d366fa40.svg\";","module.exports = __webpack_public_path__ + \"static/media/x.bad4ae08.svg\";","module.exports = __webpack_public_path__ + \"static/media/y.c4438677.svg\";","module.exports = __webpack_public_path__ + \"static/media/z.57aa21bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/wu.cf290894.svg\";","module.exports = __webpack_public_path__ + \"static/media/wb.136bffa0.svg\";","module.exports = __webpack_public_path__ + \"static/media/br.2b1640a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.511011a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ub.20d31f02.svg\";","module.exports = __webpack_public_path__ + \"static/media/ur.c570806f.svg\";","module.exports = __webpack_public_path__ + \"static/media/rg.583cb9b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/rw.4b636248.svg\";","module.exports = __webpack_public_path__ + \"static/media/gw.9b2f02d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/gu.9eb4bb1e.svg\";","module.exports = __webpack_public_path__ + \"static/media/2w.fefb1a82.svg\";","module.exports = __webpack_public_path__ + \"static/media/2u.3df5aab2.svg\";","module.exports = __webpack_public_path__ + \"static/media/2b.7bc06341.svg\";","module.exports = __webpack_public_path__ + \"static/media/2r.63270990.svg\";","module.exports = __webpack_public_path__ + \"static/media/2g.710be677.svg\";","module.exports = __webpack_public_path__ + \"static/media/cp.92e6d152.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp.8b732157.svg\";","module.exports = __webpack_public_path__ + \"static/media/up.5ff0609e.svg\";","module.exports = __webpack_public_path__ + \"static/media/bp.d4b3c9ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/rp.8155db08.svg\";","module.exports = __webpack_public_path__ + \"static/media/gp.32c26bc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/w.d4f44b64.svg\";","module.exports = __webpack_public_path__ + \"static/media/u.032bb0fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/b.7288e393.svg\";","module.exports = __webpack_public_path__ + \"static/media/r.908f6c57.svg\";","module.exports = __webpack_public_path__ + \"static/media/g.3c3d7c8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/s.5eeaced7.svg\";","import React from 'react';\r\nimport { Container, Col, Button, Row } from 'reactstrap';\r\n\r\nfunction HomeCard(props) {\r\n    return (\r\n        <Col xs=\"6\" md=\"4\" className=\"homeCardWrapper\" style={{ paddingLeft: \"0.5vh\", paddingRight: \"0.5vh\", marginTop: \"1vh\", marginBottom: \"1vh\" }}>\r\n            <Button className=\"homeCard\">\r\n                <img className=\"homeImage\" src={props.image} onClick={event => props.changePage(props.idx)} alt=\"\" />\r\n                <p className=\"homeText\">{props.name}</p>\r\n            </Button>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default function Home(props) {\r\n    let imageDeckBuilder = \"https://img.scryfall.com/cards/art_crop/en/soi/231.jpg?1517813031\",\r\n        imageAbout = \"https://img.scryfall.com/cards/art_crop/en/c18/212.jpg?1535504874\",\r\n        imageCardSearch = \"https://img.scryfall.com/cards/art_crop/en/vma/70.jpg?1517813031\",\r\n        imageSetLists = \"https://img.scryfall.com/cards/art_crop/en/hou/166.jpg?1517813031\",\r\n        imagePlanechase = \"https://img.scryfall.com/cards/art_crop/en/c16/143.jpg?1517813031\",\r\n        imageBattleCounter = \"https://img.scryfall.com/cards/art_crop/en/ust/127.jpg?1522207829\"\r\n    return (\r\n        <Container className=\"homeWrapper\">\r\n            <Row>\r\n                <HomeCard image={imageCardSearch} name=\"Card Search\" idx={2} changePage={props.changePage} />\r\n                <HomeCard image={imagePlanechase} name=\"Planechase\" idx={3} changePage={props.changePage} />\r\n                <HomeCard image={imageBattleCounter} name=\"Battlecounter\" idx={4} changePage={props.changePage} />\r\n                <HomeCard image={imageSetLists} name=\"Set Search\" idx={5} changePage={props.changePage} />\r\n\r\n            </Row>\r\n        </Container>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { Container, Col, Input, Form, InputGroup, InputGroupAddon, Button, Row, Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\r\nimport '../App.css';\r\n\r\nfunction SearchBox(props) {\r\n    return (\r\n        <Row className=\"searchBox\">\r\n            <Col xs=\"12\" className=\"scale-in-center\">\r\n                <Form className=\"inputBox\" onChange={props.handleSearchInputChange} onSubmit={props.handleSearch}>\r\n                    <InputGroup  >\r\n                        <Input style={{ borderRadius: \"0\" }} />\r\n                        <InputGroupAddon addonType=\"append\"><Button color=\"secondary\" style={{ borderRadius: \"0\" }}>Search</Button></InputGroupAddon>\r\n                    </InputGroup>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nfunction LegalBox(props) {\r\n    if (props.legal === \"legal\") {\r\n        return (\r\n            <Col xs=\"6\">\r\n                <Button color=\"success\" className=\"legalButton\">{props.game}</Button>\r\n            </Col>\r\n        )\r\n    } else {\r\n        return (\r\n            <Col xs=\"6\">\r\n                <Button color=\"secondary\" className=\"legalButton\">{props.game}</Button>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CardDataModal(props) {\r\n    let cardData = props.cardSearchState.selectedCard;\r\n    let cardLegal = props.cardSearchState.selectedCard.legalities;\r\n    return (\r\n        <Modal isOpen={props.cardSearchState.modalState} toggle={event => props.removeModal()} >\r\n            <ModalHeader toggle={event => props.removeModal()}>\r\n                <p>{cardData.name}</p>\r\n                <p>{cardData.type_line}</p>\r\n                {props.cardSearchState.selectedMana}\r\n            </ModalHeader>\r\n            <ModalBody>{props.cardSearchState.selectedCard.oracle_text}</ModalBody>\r\n            <ModalFooter>\r\n                <Row>\r\n                    <LegalBox key=\"1\" legal={cardLegal ? cardLegal.standard : ''} game=\"Standard\" />\r\n                    <LegalBox key=\"2\" legal={cardLegal ? cardLegal.future : ''} game=\"Future\" />\r\n                    <LegalBox key=\"3\" legal={cardLegal ? cardLegal.frontier : ''} game=\"Frontier\" />\r\n                    <LegalBox key=\"4\" legal={cardLegal ? cardLegal.modern : ''} game=\"Modern\" />\r\n                    <LegalBox key=\"5\" legal={cardLegal ? cardLegal.legacy : ''} game=\"Legacy\" />\r\n                    <LegalBox key=\"6\" legal={cardLegal ? cardLegal.pauper : ''} game=\"Pauper\" />\r\n                    <LegalBox key=\"7\" legal={cardLegal ? cardLegal.vintage : ''} game=\"Vintage\" />\r\n                    <LegalBox key=\"8\" legal={cardLegal ? cardLegal.penny : ''} game=\"Penny\" />\r\n                    <LegalBox key=\"9\" legal={cardLegal ? cardLegal.commander : ''} game=\"Commander\" />\r\n                    <LegalBox key=\"10\" legal={cardLegal ? cardLegal[\"1v1\"] : ''} game=\"1v1\" />\r\n                    <LegalBox key=\"11\" legal={cardLegal ? cardLegal.duel : ''} game=\"Duel\" />\r\n                    <LegalBox key=\"12\" legal={cardLegal ? cardLegal.brawl : ''} game=\"Brawl\" />\r\n\r\n                </Row>\r\n\r\n            </ModalFooter>\r\n\r\n\r\n        </Modal >\r\n    )\r\n}\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <Col xs=\"6\" md=\"3\" className=\"searchResultsCard \">\r\n            <Button className=\"scale-in-center-2sDelay\" onClick={event => props.toggleSearchModal(props.card)}>\r\n                <img src={props.card.image_uris.border_crop} style={{ width: \"100%\" }} alt=\"\" />\r\n            </Button>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default function CardSearch(props) {\r\n    return (\r\n        <Container className=\"CardSearchWrapper\">\r\n            <SearchBox handleSearchInputChange={props.handleSearchInputChange} handleSearch={props.handleNewSearch} searchSuccessNotify={props.searchSuccessNotify} />\r\n            <Row style={{ paddingLeft: \"1vh\", paddingRight: \"1vh\" }}>\r\n                {props.cardSearchState.cardList.map((card, idx) => <Card key={idx} card={card} toggleSearchModal={props.toggleSearchModal} />)}\r\n            </Row>\r\n            <CardDataModal cardSearchState={props.cardSearchState} removeModal={props.removeModal} />\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap'\r\n\r\nfunction PlaneCard(props) {\r\n    return (\r\n        <Col xs=\"12\" md=\"4\" className=\"planeCardWrapper\" style={{ paddingLeft: \"0.5vh\", paddingRight: \"0.5vh\" }}>\r\n            <Button className=\"cardButton scale-in-center-2sDelay\" onClick={event => props.addToPlanechaseDeck(props.card, props.idx)}>\r\n                <p className=\"planeName\">{props.card.name}</p>\r\n                <img className=\"planeCard\" src={props.card.image_uris.border_crop} alt=\"\" />\r\n            </Button>\r\n        </Col>\r\n    )\r\n}\r\n\r\nfunction DeckCard(props) {\r\n    return (\r\n        <Col xs=\"6\">\r\n            <p className=\"deckCard\"><i className=\"far fa-times-circle removeButton\" onClick={event => props.removeCardFromGameDeck(props.card, props.idx)} />{props.card.name}</p>\r\n        </Col>\r\n    )\r\n}\r\n\r\nfunction ButtonGroup(props) {\r\n    return (\r\n        <Col xs=\"12\" md=\"6\" className=\"scale-in-center-2sDelay\">\r\n            <Col xs=\"12\" style={{ paddingLeft: \"0.5vh\", paddingRight: \"0.5vh\" }}><Button className=\"addAllButton\" onClick={event => props.addAll()} style={{ borderRadius: \"0\" }}>Add All</Button></Col>\r\n            <Col xs=\"12\" style={{ paddingLeft: \"0.5vh\", paddingRight: \"0.5vh\" }}><Button className=\"clearAllButton\" onClick={event => props.removeAll()} style={{ borderRadius: \"0\" }}>Clear Deck</Button></Col>\r\n            <Col xs=\"12\" style={{ paddingLeft: \"0.5vh\", paddingRight: \"0.5vh\" }}><Button className=\"startGameButton\" onClick={event => props.startGame()} style={{ borderRadius: \"0\" }} color=\"success\">Stard Game</Button></Col>\r\n        </Col>\r\n    )\r\n}\r\n\r\nfunction Game(props) {\r\n    if (props.planechaseState.gameDeck.length > 0) {\r\n        return (\r\n            <Row className=\"scale-in-center-2sDelay\">\r\n                <Col xs=\"12\"><img className=\"planeCard currentCard\" onClick={event => props.nextCard()} src={props.planechaseState.gameDeck[0].image_uris.normal} alt=\"\" /></Col>\r\n                <Button className=\"endGameButton\" style={{ borderRadius: \"0\" }} onClick={event => props.endGame()}>End Game</Button>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return (\"\")\r\n    }\r\n}\r\nexport default function Planechase(props) {\r\n    return (\r\n        <Container className=\"PlanechaseWrapper\">\r\n            <div style={{ display: (props.planechaseState.gameGoing ? \"none\" : \"\") }}>\r\n                <Row>\r\n                    <Col xs=\"12\" md=\"6\">\r\n                        <div className=\"gameDeck scale-in-center-2sDelay\">\r\n                            <Row>\r\n                                {props.planechaseState.gameDeck.map((card, idx) => <DeckCard card={card} idx={idx} removeCardFromGameDeck={props.removeCardFromGameDeck} />)}\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                    <ButtonGroup addAll={props.addAll} removeAll={props.removeAll} startGame={props.startGame} />\r\n\r\n                </Row>\r\n                <Row>\r\n                    {props.planechaseState.allPlaneCards.map((card, idx) => <PlaneCard card={card} key={idx} addToPlanechaseDeck={props.addToPlanechaseDeck} idx={idx} />)}\r\n                </Row>\r\n            </div>\r\n            <div style={{ display: (props.planechaseState.gameGoing ? \"\" : \"none\") }}>\r\n                <Game planechaseState={props.planechaseState} nextCard={props.nextCard} endGame={props.endGame} />\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport { Container, Card, CardBody, CardHeader, Col, Button, Row } from 'reactstrap';\r\nimport '../App.css';\r\n\r\nfunction PlayerCard(props) {\r\n    return (\r\n        <Col xs=\"6\" md=\"4\" style={{ paddingLeft: \"0.5vh\", paddingRight: \"0.5vh\" }}>\r\n            <Card className=\"playerCard scale-in-center\" style={{ borderRadius: '0' }} key={props.idx}>\r\n                <CardHeader><input className=\"playerName\" placeholder={\"Player \" + props.playerNumber} /></CardHeader>\r\n                <CardBody style={{ padding: \"1vh\" }}>\r\n                    <Row>\r\n                        {props.player.map((player, idx) =>\r\n                            <Col xs=\"12\" key={idx}>\r\n                                <Row className=\"counterNumber\">\r\n                                    <Col xs=\"4\" className=\"plusContainer\">\r\n                                        <i className=\"far fa-plus-square\" onClick={event => props.plusOne(props.idx, idx)} style={{ cursor: \"pointer\" }} />\r\n                                    </Col>\r\n                                    <Col xs=\"4\" style={{ padding: \"0\" }}>\r\n                                        <p style={{ marginBottom: \"0\" }}>{player}</p>\r\n                                    </Col>\r\n                                    <Col xs=\"4\" className=\"minusContainer\">\r\n                                        <i className=\"far fa-minus-square\" onClick={event => props.minusOne(props.idx, idx)} style={{ cursor: \"pointer\" }} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n\r\n                </CardBody>\r\n                <Button onClick={event => props.addCounter(props.idx)} style={{ borderRadius: '0' }}>Add Counter</Button>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default function BattleCounter(props) {\r\n    return (\r\n        <Container className=\"BattleCounterWrapper scale-in-center\">\r\n            <Row>\r\n                <Col xs=\"6\" style={{ paddingLeft: \"0.5vh\", paddingRight: \"0.5vh\" }}>\r\n                    <Button onClick={event => props.addPlayer()} style={{ width: \"100%\", borderRadius: \"0\" }}>Add Player</Button>\r\n                </Col>\r\n                <Col xs=\"6\" style={{ paddingLeft: \"0.5vh\", paddingRight: \"0.5vh\" }}>\r\n                    <Button onClick={event => props.removeAllPlayers()} style={{ width: \"100%\", borderRadius: \"0\" }}>Remove All Players</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {props.battleCounterState.players.map((player, idx) => <PlayerCard player={player} playerNumber={idx + 1} idx={idx} addCounter={props.addCounter} plusOne={props.plusOne} minusOne={props.minusOne} key={idx} />)}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport { Container, Col, Row, Table, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Loading from '../images/loading.svg';\r\n\r\nfunction SetRow(props) {\r\n    return (\r\n        <tr className=\"setRow\" key={props.idx} onClick={event => props.selectSet(props.set)}>\r\n            <td style={{ paddingLeft: (props.set.set_type === \"token\" ? \"2rem\" : \"\") }}><img className=\"setIcon\" src={props.set.icon_svg_uri} alt=\"\" /></td>\r\n            <td style={{ paddingLeft: (props.set.set_type === \"token\" ? \"2rem\" : \"\") }}>{props.set.name}</td>\r\n            <td>{props.set.card_count}</td>\r\n            <td>{props.set.released_at ? props.set.released_at : \"-\"}</td>\r\n            <td>{props.set.set_type}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nfunction SetTable(props) {\r\n    return (\r\n        <Row>\r\n            <Col xs={{ size: \"10\", offset: \"1\" }}>\r\n                <Table hover size=\"sm\" className=\"setsTable\" responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Set</th>\r\n                            <th>Card Count</th>\r\n                            <th>Release Date</th>\r\n                            <th>Set Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.setSearchState.allSets.map((set, idx) => <SetRow set={set} idx={idx} key={idx} selectSet={props.selectSet} />)}\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nfunction LegalBox(props) {\r\n    if (props.legal === \"legal\") {\r\n        return (\r\n            <Col xs=\"6\">\r\n                <Button color=\"success\" className=\"legalButton\">{props.game}</Button>\r\n            </Col>\r\n        )\r\n    } else {\r\n        return (\r\n            <Col xs=\"6\">\r\n                <Button color=\"secondary\" className=\"legalButton\">{props.game}</Button>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nfunction CardDataModal(props) {\r\n    let cardData = props.setSearchState.selectedCard;\r\n    let cardLegal = props.setSearchState.selectedCard.legalities;\r\n    return (\r\n        <Modal isOpen={props.setSearchState.modalState} toggle={event => props.removeSetModal()} >\r\n            <ModalHeader toggle={event => props.removeSetModal()}>\r\n                <p>{cardData.name}</p>\r\n                <p>{cardData.type_line}</p>\r\n                {props.setSearchState.selectedMana}\r\n            </ModalHeader>\r\n            <ModalBody>{props.setSearchState.selectedCard.oracle_text}</ModalBody>\r\n            <ModalFooter>\r\n                <Row>\r\n                    <LegalBox key=\"1\" legal={cardLegal ? cardLegal.standard : ''} game=\"Standard\" />\r\n                    <LegalBox key=\"2\" legal={cardLegal ? cardLegal.future : ''} game=\"Future\" />\r\n                    <LegalBox key=\"3\" legal={cardLegal ? cardLegal.frontier : ''} game=\"Frontier\" />\r\n                    <LegalBox key=\"4\" legal={cardLegal ? cardLegal.modern : ''} game=\"Modern\" />\r\n                    <LegalBox key=\"5\" legal={cardLegal ? cardLegal.legacy : ''} game=\"Legacy\" />\r\n                    <LegalBox key=\"6\" legal={cardLegal ? cardLegal.pauper : ''} game=\"Pauper\" />\r\n                    <LegalBox key=\"7\" legal={cardLegal ? cardLegal.vintage : ''} game=\"Vintage\" />\r\n                    <LegalBox key=\"8\" legal={cardLegal ? cardLegal.penny : ''} game=\"Penny\" />\r\n                    <LegalBox key=\"9\" legal={cardLegal ? cardLegal.commander : ''} game=\"Commander\" />\r\n                    <LegalBox key=\"10\" legal={cardLegal ? cardLegal[\"1v1\"] : ''} game=\"1v1\" />\r\n                    <LegalBox key=\"11\" legal={cardLegal ? cardLegal.duel : ''} game=\"Duel\" />\r\n                    <LegalBox key=\"12\" legal={cardLegal ? cardLegal.brawl : ''} game=\"Brawl\" />\r\n\r\n                </Row>\r\n\r\n            </ModalFooter>\r\n\r\n\r\n        </Modal >\r\n    )\r\n}\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <Col xs=\"6\" md=\"3\" className=\"searchResultsCard \">\r\n            <Button className=\"scale-in-center-2sDelay\" onClick={event => props.toggleSetSearchModal(props.card)}>\r\n                <img src={props.card.image_uris.border_crop} style={{ width: \"100%\" }} alt=\"\" />\r\n            </Button>\r\n        </Col>\r\n    )\r\n}\r\n\r\nfunction SetCard(props) {\r\n    if (!props.setSearchState.loading && props.setSearchState.showSet) {\r\n        return (\r\n            <Row>\r\n                <Col xs=\"12\">\r\n                    <Button onClick={event => props.returnToSets()} className=\"returnButton\">Return to Sets </Button>\r\n                </Col>\r\n                {props.setSearchState.setData.map((card, idx) => card.image_uris ? <Card key={idx} card={card} toggleSetSearchModal={props.toggleSetSearchModal} /> : console.log(card.name + \" omited from results because of an error\"))}\r\n            </Row>\r\n        )\r\n    } else {\r\n        return \"\"\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default function SetSearch(props) {\r\n    return (\r\n        <Container>\r\n\r\n            <Row>\r\n                <Col xs={{ size: \"4\", offset: \"4\" }}>\r\n                    {props.setSearchState.loading ? <img src={Loading} alt=\"\" className=\"loadingImage rotate-scale-up\" /> : \"\"}\r\n                </Col>\r\n            </Row>\r\n            {!props.setSearchState.loading && !props.setSearchState.showSet ? <SetTable setSearchState={props.setSearchState} selectSet={props.selectSet} /> : \"\"}\r\n\r\n            <SetCard setSearchState={props.setSearchState} toggleSetSearchModal={props.toggleSetSearchModal} returnToSets={props.returnToSets} />\r\n            <CardDataModal removeSetModal={props.removeSetModal} setSearchState={props.setSearchState} />\r\n\r\n        </Container >\r\n    )\r\n}","import React from 'react';\r\nimport xMana from \"../images/mana symbols/x.svg\";\r\nimport yMana from \"../images/mana symbols/y.svg\";\r\nimport zMana from \"../images/mana symbols/z.svg\";\r\nimport whiteOrBlue from \"../images/mana symbols/wu.svg\";\r\nimport whiteOrBlack from \"../images/mana symbols/wb.svg\";\r\nimport blackOrRed from \"../images/mana symbols/br.svg\";\r\nimport blackOrGreen from \"../images/mana symbols/bg.svg\";\r\nimport blueOrBlack from \"../images/mana symbols/ub.svg\";\r\nimport blueOrRed from \"../images/mana symbols/ur.svg\";\r\nimport redOrGreen from \"../images/mana symbols/rg.svg\";\r\nimport redOrWhite from \"../images/mana symbols/rw.svg\";\r\nimport greenOrWhite from \"../images/mana symbols/gw.svg\";\r\nimport greenOrBlue from \"../images/mana symbols/gu.svg\";\r\nimport twoOrWhite from \"../images/mana symbols/2w.svg\";\r\nimport twoOrBlue from \"../images/mana symbols/2u.svg\";\r\nimport twoOrBlack from \"../images/mana symbols/2b.svg\";\r\nimport twoOrRed from \"../images/mana symbols/2r.svg\";\r\nimport twoOrGreen from \"../images/mana symbols/2g.svg\";\r\nimport colorOrLife from \"../images/mana symbols/cp.svg\";\r\nimport whiteOrLife from \"../images/mana symbols/wp.svg\";\r\nimport blueOrLife from \"../images/mana symbols/up.svg\";\r\nimport blackOrLife from \"../images/mana symbols/bp.svg\";\r\nimport redOrLife from \"../images/mana symbols/rp.svg\";\r\nimport greenOrLife from \"../images/mana symbols/gp.svg\";\r\nimport whiteMana from \"../images/mana symbols/w.svg\";\r\nimport blueMana from \"../images/mana symbols/u.svg\";\r\nimport blackMana from \"../images/mana symbols/b.svg\";\r\nimport redMana from \"../images/mana symbols/r.svg\";\r\nimport greenMana from \"../images/mana symbols/g.svg\";\r\nimport snowMana from \"../images/mana symbols/s.svg\";\r\n\r\n\r\n\r\nexport default function converText(manaText) {\r\n    let manaCostArray = manaText\r\n        .split(\"{\")\r\n        .map(element => \"{\" + element)\r\n        .filter(element => 1 < element.length);\r\n    let symbolCost = manaCostArray.map((mana, idx) => findSymbol(mana, idx))\r\n\r\n    return symbolCost\r\n\r\n}\r\n\r\nfunction removeBrackets(text) {\r\n    var mana = text.split(\"{\")[1].split(\"}\")[0];\r\n    return mana;\r\n}\r\n\r\nfunction findSymbol(mana, idx) {\r\n    switch (mana) {\r\n\r\n        case \"{X}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={xMana} alt=\"\" />)\r\n        case \"{Y}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={yMana} alt=\"\" />)\r\n        case \"{Z}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={zMana} alt=\"\" />)\r\n        case \"{W/U}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={whiteOrBlue} alt=\"\" />)\r\n        case \"{W/B}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={whiteOrBlack} alt=\"\" />)\r\n        case \"{B/R}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={blackOrRed} alt=\"\" />)\r\n        case \"{B/G}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={blackOrGreen} alt=\"\" />)\r\n        case \"{U/B}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={blueOrBlack} alt=\"\" />)\r\n        case \"{U/R}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={blueOrRed} alt=\"\" />)\r\n        case \"{R/G}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={redOrGreen} alt=\"\" />)\r\n        case \"{R/W}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={redOrWhite} alt=\"\" />)\r\n        case \"{G/W}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={greenOrWhite} alt=\"\" />)\r\n        case \"{G/U}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={greenOrBlue} alt=\"\" />)\r\n        case \"{2/W}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={twoOrWhite} alt=\"\" />)\r\n        case \"{2/U}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={twoOrBlue} alt=\"\" />)\r\n        case \"{2/B}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={twoOrBlack} alt=\"\" />)\r\n        case \"{2/R}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={twoOrRed} alt=\"\" />)\r\n        case \"{2/G}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={twoOrGreen} alt=\"\" />)\r\n        case \"{P}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={colorOrLife} alt=\"\" />)\r\n        case \"{W/P}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={whiteOrLife} alt=\"\" />)\r\n        case \"{U/P}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={blueOrLife} alt=\"\" />)\r\n        case \"{B/P}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={blackOrLife} alt=\"\" />)\r\n        case \"{R/P}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={redOrLife} alt=\"\" />)\r\n        case \"{G/P}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={greenOrLife} alt=\"\" />)\r\n        case \"{W}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={whiteMana} alt=\"\" />)\r\n        case \"{U}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={blueMana} alt=\"\" />)\r\n        case \"{B}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={blackMana} alt=\"\" />)\r\n        case \"{R}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={redMana} alt=\"\" />)\r\n        case \"{G}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={greenMana} alt=\"\" />)\r\n        case \"{S}\":\r\n            return (<img key={idx} className=\"manaSymbol\" src={snowMana} alt=\"\" />)\r\n        default:\r\n            return (<span key={idx} className=\"anyManaSymbol\">{removeBrackets(mana)}</span>)\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport Home from './pages/home';\r\nimport CardSearch from './pages/cardSearch';\r\nimport Planechase from './pages/planechase';\r\nimport BattleCounter from './pages/battleCounter';\r\nimport SetSearch from './pages/setSearch';\r\nimport converText from './utilities/symbolSwitch';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pageView: 1,\r\n      planechaseState: {\r\n        planeSearchUrl: \"https://api.scryfall.com/cards/search?q=t=plane\",\r\n        allPlaneCards: [],\r\n        gameDeck: [],\r\n        currentCardIdx: 1,\r\n        gameGoing: false,\r\n\r\n      },\r\n      cardSearchState: {\r\n        inputValueCardName: '',\r\n        autocompleteUrl: 'https://api.scryfall.com/cards/autocomplete?q=',\r\n        fuzzyUrl: 'https://api.scryfall.com/cards/named?fuzzy=',\r\n        searchUrl: \"https://api.scryfall.com/cards/search?q=\",\r\n        cardList: [],\r\n        selectedCard: {},\r\n        selectedMana: [],\r\n        badSearch: false,\r\n        modalState: false,\r\n      },\r\n      battleCounterState: {\r\n        players: [],\r\n\r\n      },\r\n      setSearchState: {\r\n        allSets: [],\r\n        setSearchUrl: 'https://api.scryfall.com/sets',\r\n        selectedSet: {},\r\n        showSet: false,\r\n        setData: [],\r\n        loading: false,\r\n        selectedCard: [],\r\n        selectedMana: [],\r\n        modalState: false,\r\n\r\n      }\r\n    }\r\n\r\n    // Home Page Functions\r\n    this.changePage = this.changePage.bind(this);\r\n    // Card Search Functions \r\n    this.removeModal = this.removeModal.bind(this);\r\n    this.toggleSearchModal = this.toggleSearchModal.bind(this);\r\n    this.handleSearchInputChange = this.handleSearchInputChange.bind(this);\r\n    this.handleNewSearch = this.handleNewSearch.bind(this)\r\n    // Planechase Functions\r\n    this.addAll = this.addAll.bind(this);\r\n    this.endGame = this.endGame.bind(this);\r\n    this.nextCard = this.nextCard.bind(this);\r\n    this.removeAll = this.removeAll.bind(this);\r\n    this.startGame = this.startGame.bind(this);\r\n    this.findAllPlaneCards = this.findAllPlaneCards.bind(this);\r\n    this.addToPlanechaseDeck = this.addToPlanechaseDeck.bind(this);\r\n    this.removeCardFromGameDeck = this.removeCardFromGameDeck.bind(this);\r\n    // Battle Counter Functions\r\n    this.addPlayer = this.addPlayer.bind(this);\r\n    this.removeAllPlayers = this.removeAllPlayers.bind(this);\r\n    this.addCounter = this.addCounter.bind(this);\r\n    this.plusOne = this.plusOne.bind(this);\r\n    this.minusOne = this.minusOne.bind(this);\r\n    // Set Search Functions\r\n    this.findAllSets = this.findAllSets.bind(this);\r\n    this.selectSet = this.selectSet.bind(this);\r\n    this.setSearch = this.setSearch.bind(this);\r\n    this.toggleSetSearchModal = this.toggleSetSearchModal.bind(this);\r\n    this.removeSetModal = this.removeSetModal.bind(this);\r\n    this.returnToSets = this.returnToSets.bind(this);\r\n  }\r\n\r\n  // Home Page Functions\r\n  changePage(index) {\r\n    this.setState({ pageView: index })\r\n  }\r\n  // Card Search Functions \r\n  handleSearchInputChange(event) {\r\n    let cardSearchState = this.state.cardSearchState;\r\n    cardSearchState.inputValueCardName = event.target.value;\r\n    cardSearchState.badSearch = false;\r\n    this.setState({ cardSearchState: cardSearchState });\r\n  }\r\n  handleNewSearch(event) {\r\n    let cardSearchState = this.state.cardSearchState,\r\n      searchUrl = cardSearchState.searchUrl,\r\n      self = this;\r\n    cardSearchState.cardList = [];\r\n    // only search if there is a value in the search field\r\n    if (cardSearchState.inputValueCardName.length > 0) {\r\n      // create the search url\r\n      searchUrl = searchUrl + cardSearchState.inputValueCardName.split(' ').join('+');\r\n      // create axios request\r\n      axios.get(searchUrl)\r\n        .then(function (response) {\r\n          let searchData = response.data.data\r\n          // if the response ha something in it\r\n          if (searchData.length > 0) {\r\n            toast.success(\"😎 Found something!\")\r\n            searchData.forEach(card => {\r\n              if (card.image_uris) {\r\n                cardSearchState.cardList.push(card)\r\n                cardSearchState.badSearch = false;\r\n                self.setState({ cardSearchState: cardSearchState })\r\n              } else {\r\n                console.log(card.name + \" omited from results because of an error\")\r\n              }\r\n            })\r\n          } else {\r\n            toast.error(\"😭 Found nothing \")\r\n            cardSearchState.cardList = [];\r\n            cardSearchState.badSearch = true;\r\n            self.setState({ cardSearchState: cardSearchState })\r\n            console.log(\"No Similar Cards\")\r\n          }\r\n        }\r\n        )\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      toast.error(\"😭 Found nothing \")\r\n    }\r\n    event.preventDefault()\r\n  }\r\n\r\n  toggleSearchModal(card) {\r\n    let cardSearchState = this.state.cardSearchState;\r\n    cardSearchState.selectedCard = card\r\n    cardSearchState.selectedMana = converText(card.mana_cost)\r\n    cardSearchState.modalState = !cardSearchState.modalState;\r\n    this.setState({ cardSearchState: cardSearchState });\r\n  }\r\n  removeModal() {\r\n    let cardSearchState = this.state.cardSearchState;\r\n    cardSearchState.selectedCard = {};\r\n    cardSearchState.selectedMana = [];\r\n    cardSearchState.modalState = !cardSearchState.modalState;\r\n    this.setState({ cardSearchState: cardSearchState });\r\n  }\r\n  // Planchase Functions\r\n  findAllPlaneCards(props) {\r\n    let planechaseState = this.state.planechaseState,\r\n      self = this;\r\n    if (planechaseState.allPlaneCards.length === 0) {\r\n      axios.get(planechaseState.planeSearchUrl)\r\n        .then(function (response) {\r\n          planechaseState.allPlaneCards = response.data.data\r\n          self.setState({ planechaseState: planechaseState })\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  }\r\n  addToPlanechaseDeck(card, idx) {\r\n    let planechaseState = this.state.planechaseState;\r\n    planechaseState.gameDeck.push(card)\r\n    toast.info(\"👌 \" + card.name + \" added to deck (\" + planechaseState.gameDeck.length + \" in Deck)\")\r\n    this.setState({ planechaseState: planechaseState })\r\n  }\r\n  addAll() {\r\n    let planechaseState = this.state.planechaseState;\r\n    planechaseState.gameDeck = planechaseState.gameDeck.concat(planechaseState.allPlaneCards)\r\n    toast.info(\"🔥 ALL CARDS ADDED (\" + planechaseState.gameDeck.length + \" in Deck) 🔥\")\r\n    this.setState({ planechaseState: planechaseState })\r\n  }\r\n  removeAll() {\r\n    let planechaseState = this.state.planechaseState;\r\n    planechaseState.gameDeck = [];\r\n    toast.info(\"💀 ALL CARDS REMOVED 💀\");\r\n    this.setState({ planechaseState: planechaseState })\r\n  }\r\n  removeCardFromGameDeck(card, idx) {\r\n    // remove specific card based on the index of the card in the deck\r\n    let planechaseState = this.state.planechaseState;\r\n    planechaseState.gameDeck.splice(idx, 1)\r\n    toast.info(\"💀 \" + card.name + \" removed from deck (\" + planechaseState.gameDeck.length + \" in Deck)\")\r\n\r\n    this.setState({ planechaseState: planechaseState })\r\n\r\n  }\r\n  startGame() {\r\n    let planechaseState = this.state.planechaseState;\r\n    function shuffle(deck) {\r\n      for (let i = deck.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [deck[i], deck[j]] = [deck[j], deck[i]];\r\n      }\r\n      return deck;\r\n    }\r\n    if (planechaseState.gameDeck.length > 0) {\r\n      planechaseState.gameDeck = shuffle(planechaseState.gameDeck);\r\n      planechaseState.gameGoing = true;\r\n    } else {\r\n      toast.info(\"You need to add some cards first!\")\r\n\r\n    }\r\n    this.setState({ planechaseState: planechaseState })\r\n\r\n  }\r\n  nextCard() {\r\n    let planechaseState = this.state.planechaseState;\r\n    planechaseState.gameDeck.push(planechaseState.gameDeck.shift());\r\n    planechaseState.currentCardIdx++;\r\n    function shuffle(deck) {\r\n      for (let i = deck.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [deck[i], deck[j]] = [deck[j], deck[i]];\r\n      }\r\n      return deck;\r\n    }\r\n    if (planechaseState.currentCardIdx === planechaseState.gameDeck.length) {\r\n      shuffle(planechaseState.gameDeck);\r\n      toast.info(\"Deck shuffled!\")\r\n\r\n      planechaseState.currentCardIdx = 1;\r\n    }\r\n    this.setState({ planechaseState: planechaseState });\r\n\r\n\r\n  }\r\n  endGame() {\r\n    let planechaseState = this.state.planechaseState;\r\n    planechaseState.gameGoing = false;\r\n    planechaseState.currentCardIdx = 1;\r\n    this.setState({ planechaseState: planechaseState });\r\n  }\r\n  // Battle Counter Functions \r\n  addPlayer() {\r\n    let battleCounterState = this.state.battleCounterState;\r\n    battleCounterState.players.push([20])\r\n    this.setState({ battleCounterState: battleCounterState })\r\n  }\r\n  removeAllPlayers() {\r\n    let battleCounterState = this.state.battleCounterState;\r\n    battleCounterState.players = [];\r\n    this.setState({ battleCounterState: battleCounterState })\r\n  }\r\n  addCounter(idx) {\r\n    let battleCounterState = this.state.battleCounterState;\r\n    battleCounterState.players[idx].push(0)\r\n    this.setState({ battleCounterState: battleCounterState })\r\n  }\r\n  plusOne(playerIdx, idx) {\r\n    let battleCounterState = this.state.battleCounterState;\r\n    battleCounterState.players[playerIdx][idx]++;\r\n    this.setState({ battleCounterState: battleCounterState })\r\n\r\n  }\r\n  minusOne(playerIdx, idx) {\r\n    let battleCounterState = this.state.battleCounterState;\r\n    battleCounterState.players[playerIdx][idx]--;\r\n    this.setState({ battleCounterState: battleCounterState })\r\n\r\n  }\r\n  // Set Search Functions\r\n  findAllSets() {\r\n    let setSearchState = this.state.setSearchState,\r\n      self = this;\r\n    if (setSearchState.allSets.length === 0) {\r\n      axios.get(setSearchState.setSearchUrl)\r\n        .then(function (response) {\r\n          setSearchState.allSets = response.data.data;\r\n          self.setState({ setSearchState: setSearchState });\r\n\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n  }\r\n  selectSet(set) {\r\n    let setSearchState = this.state.setSearchState;\r\n    setSearchState.selectedSet = set;\r\n    setSearchState.setData = [];\r\n    this.setSearch(set.search_uri)\r\n    this.setState({ setSearchState: setSearchState });\r\n\r\n  }\r\n\r\n  setSearch(uri) {\r\n    let setSearchState = this.state.setSearchState,\r\n      self = this;\r\n    setSearchState.loading = true;\r\n\r\n    axios.get(uri)\r\n      .then(function (response) {\r\n        if (response.data.has_more) {\r\n          response.data.data.forEach(card => setSearchState.setData.push(card));\r\n          setSearchState.loading = true;\r\n          self.setState({ setSearchState: setSearchState });\r\n          self.setSearch(response.data.next_page)\r\n          console.log(setSearchState.setData)\r\n        } else {\r\n          response.data.data.forEach(card => setSearchState.setData.push(card));\r\n          setSearchState.loading = false;\r\n          setSearchState.showSet = true;\r\n          self.setState({ setSearchState: setSearchState });\r\n          console.log(setSearchState.setData)\r\n        }\r\n      })\r\n  }\r\n\r\n  toggleSetSearchModal(card) {\r\n    let setSearchState = this.state.setSearchState;\r\n    setSearchState.selectedCard = card\r\n    setSearchState.selectedMana = converText(card.mana_cost)\r\n    setSearchState.modalState = !setSearchState.modalState;\r\n    this.setState({ setSearchState: setSearchState });\r\n  }\r\n  removeSetModal() {\r\n    let setSearchState = this.state.setSearchState;\r\n    setSearchState.selectedCard = {};\r\n    setSearchState.selectedMana = [];\r\n    setSearchState.modalState = !setSearchState.modalState;\r\n    this.setState({ setSearchState: setSearchState });\r\n  }\r\n  returnToSets() {\r\n    let setSearchState = this.state.setSearchState;\r\n    setSearchState.showSet = false;\r\n    setSearchState.setData = [];\r\n    this.setState({ setSearchState: setSearchState });\r\n\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let pages = [\r\n      \"\",\r\n      <Home changePage={this.changePage} />,\r\n      <CardSearch handleNewSearch={this.handleNewSearch} handleSearchInputChange={this.handleSearchInputChange} cardSearchState={this.state.cardSearchState} toggleSearchModal={this.toggleSearchModal} removeModal={this.removeModal} />,\r\n      <Planechase planechaseState={this.state.planechaseState} addToPlanechaseDeck={this.addToPlanechaseDeck} addAll={this.addAll} removeAll={this.removeAll} removeCardFromGameDeck={this.removeCardFromGameDeck} startGame={this.startGame} nextCard={this.nextCard} endGame={this.endGame} />,\r\n      <BattleCounter battleCounterState={this.state.battleCounterState} addPlayer={this.addPlayer} removeAllPlayers={this.removeAllPlayers} addCounter={this.addCounter} plusOne={this.plusOne} minusOne={this.minusOne} />,\r\n      <SetSearch setSearchState={this.state.setSearchState} selectSet={this.selectSet} setSearch={this.setSearch} toggleSetSearchModal={this.toggleSetSearchModal} removeSetModal={this.removeSetModal} returnToSets={this.returnToSets} />\r\n    ]\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Button onClick={event => this.changePage(1)} />\r\n        </header>\r\n        {this.findAllPlaneCards()}\r\n        {this.findAllSets()}\r\n        <ToastContainer />\r\n        {pages[this.state.pageView]}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}